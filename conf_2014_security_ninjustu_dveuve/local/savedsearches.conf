[Scenario Two - Backfill TSIDX]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=Cerner | eval Role=spath(_raw, "audit_list.role") | eval RoleID = spath(_raw, "audit_list.role_cd") | eval Username = spath(_raw, "audit_list.user_name") | eval EmployeeID = spath(_raw, "audit_list.prsnl_id") | eval EmployeeName = spath(_raw, "audit_list.prsnl_name") | eval PatientName = spath(_raw, "audit_list.event_list.participants.person_name") | eval MRN = spath(_raw, "audit_list.event_list.participants.person_id") | eval MRN = mvfilter(MRN !=0) | lookup HR_IS.csv EmployeeID | bucket _time span=1d | stats count as NumOpens dc(MRN) as NumCharts by Role, RoleID, Username, EmployeeID, EmployeeName, YearsAtCompany, City, _time | tscollect namespace=Cerner keepresults=t

[Scenario One - All PAN Traffic]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=pan_logs sourcetype=pan_traffic

[Scenario One - Lookup for Threat List Added]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=pan_logs sourcetype=pan_traffic | lookup ThreatIntel dest

[Scenario One - Only Threat List Traffic]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=pan_logs sourcetype=pan_traffic | lookup ThreatIntel dest | search ThreatIntel=*

[Scenario Three - All Carbon Black]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=carbonblack

[Scenario Three - Core Pivot Search]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = statistics
display.page.pivot.dataModel = /servicesNS/admin/conf_2014_security_ninjustu_dveuve/datamodel/model/Carbon_Black
display.visualizations.show = 0
request.ui_dispatch_app = conf_2014_security_ninjustu_dveuve
request.ui_dispatch_view = pivot
search = | pivot Carbon_Black File_Creations values(host) AS "Hosts" dc(host) AS "NumHosts" SPLITROW path AS path SORT 100 path ROWSUMMARY 0 COLSUMMARY 0 NUMCOLS 0 SHOWOTHER 1

[Scenario Three - Pivot With evenstats]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = | pivot Carbon_Black File_Creations values(host) AS "Hosts" dc(host) AS "NumHosts" SPLITROW path AS path SORT 100 path ROWSUMMARY 0 COLSUMMARY 0 NUMCOLS 0 SHOWOTHER 1\
| eventstats avg(NumHosts) as Avg_NumHosts stdev(NumHosts) as StDev_NumHosts

[Scenario One - Performance Variant]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = index=pan_logs sourcetype=pan_traffic  [|inputlookup ThreatIntel | fields dest]

[Scenario Three - Ultimate Result]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = | pivot Carbon_Black File_Creations values(host) AS "Hosts" dc(host) AS "NumHosts" SPLITROW path AS path SORT 100 path ROWSUMMARY 0 COLSUMMARY 0 NUMCOLS 0 SHOWOTHER 1\
| eventstats avg(NumHosts) as Avg_NumHosts stdev(NumHosts) as StDev_NumHosts\
| where NumHosts < Avg_NumHosts - StDev_NumHosts*3\
| mvexpand Hosts

[Scenario Two - Analysis without Acceleration]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -3d@d
dispatch.latest_time = @d
search = index=cerner \
 | eval Role=spath(_raw, "audit_list.role") | eval RoleID = spath(_raw, "audit_list.role_cd") | eval Username = spath(_raw, "audit_list.user_name") | eval EmployeeID = spath(_raw, "audit_list.prsnl_id") | eval EmployeeName = spath(_raw, "audit_list.prsnl_name") | eval PatientName = spath(_raw, "audit_list.event_list.participants.person_name") | eval MRN = spath(_raw, "audit_list.event_list.participants.person_id")\
| bucket _time span=1d |stats dc(MRN) as NumRecords by EmployeeName, EmployeeID, _time \
| stats first(NumRecords) avg(NumRecords) stdev(NumRecords) by EmployeeName, EmployeeID\
| where 'first(NumRecords)' > 'avg(NumRecords)' + 'stdev(NumRecords)' * 3

[Scenario Two - Data Check]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = | tstats local=t count from Cerner groupby _time span=1d | join type=outer _time [|metasearch index=cerner | timechart span=1d count as rawcount]

[Scenario Two - Search with Acceleration]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = 0
dispatch.latest_time = now
search = | tstats local=t first(NumOpens) as Recent_NumOpens avg(NumOpens) as Avg_NumOpens stdev(NumOpens) as Stdev_NumOpens first(NumCharts) as Recent_NumCharts avg(NumCharts) as Avg_NumCharts stdev(NumCharts) as Stdev_NumCharts from Cerner groupby EmployeeName, EmployeeID, Username, Role, RoleID, City, YearsAtCompany \
| join type=outer RoleID [\
| tstats local=t avg(NumOpens) as Role_Avg_NumOpens avg(NumCharts) as Role_Avg_NumCharts stdev(NumOpens) as Role_Stdev_NumOpens stdev(NumCharts) as Role_Stdev_NumCharts from Cerner groupby Role, RoleID ] \
| join type=outer YearsAtCompany, RoleID [\
| tstats local=t avg(NumOpens) as Years_Avg_NumOpens avg(NumCharts) as Years_Avg_NumCharts stdev(NumOpens) as Years_Stdev_NumOpens stdev(NumCharts) as Years_Stdev_NumCharts from Cerner groupby YearsAtCompany, RoleID ] \
| join type=outer City, RoleID [\
| tstats local=t avg(NumOpens) as City_Avg_NumOpens avg(NumCharts) as City_Avg_NumCharts stdev(NumOpens) as City_Stdev_NumOpens stdev(NumCharts) as City_Stdev_NumCharts from Cerner groupby City, RoleID ] \
| eval Personal_Z = abs(Recent_NumCharts-Avg_NumCharts)/Stdev_NumCharts \
| eval Role_Z = abs(Recent_NumCharts-Role_Avg_NumCharts)/Role_Stdev_NumCharts \
| eval City_Z = abs(Recent_NumCharts-City_Avg_NumCharts)/City_Stdev_NumCharts \
| eval Years_Z = abs(Recent_NumCharts-Years_Avg_NumCharts)/Years_Stdev_NumCharts \
| eval Z_Avg = (Years_Z + City_Z + Role_Z + Personal_Z) / 4 \
| sort - Z_Avg \
| foreach *Z* Avg_NumCharts [ fieldformat <<FIELD>>=round(<<FIELD>>,2)] \
| fields Employee* Username Role RoleID City YearsAtCompany Z_Avg "*_Z" Recent_NumCharts Avg_NumCharts
